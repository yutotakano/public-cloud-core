name: Build Docker Images
on:
  push:
    branches:
      - master

jobs:
  # ================================================================
  # Find what changes have been made and determine which jobs to run
  # ================================================================
  changes:
    name: Determine changes
    runs-on: ubuntu-latest
    outputs:
      corekube_db: ${{ steps.filter.outputs.corekube_db }}
      corekube_frontend: ${{ steps.filter.outputs.corekube_frontend }}
      corekube_worker: ${{ steps.filter.outputs.corekube_worker }}
      libck: ${{ steps.filter.outputs.libck }}
      core_metrics_bus: ${{ steps.filter.outputs.core_metrics_bus }}
      ran_controller: ${{ steps.filter.outputs.ran_controller }}
      ran_slave: ${{ steps.filter.outputs.ran_slave }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - uses: dorny/paths-filter@v3
        id: filter
        with:
          # Output is set to true if there are changes in any of the paths
          filters: |
            corekube_db:
              - 'corekube-db/**'
            corekube_frontend:
              - 'corekube-frontend/**'
            corekube_worker:
              - 'corekube5g-worker/**'
            libck:
              - 'libck/**'
            core_metrics_bus:
              - 'core-metrics-bus/**'
            ran_controller:
              - 'ran_emulator/kubernetes/docker_controller/**'
              - 'ran_emulator/ran_controller/**'
            ran_slave:
              - 'ran_emulator/kubernetes/docker_slave/**'
              - 'ran_emulator/headers/**'
              - 'ran_emulator/source/**'
              - 'ran_emulator/Makefile'

  # =========================================================
  # CoreKube DB
  # =========================================================
  build_corekube_db:
    needs: changes
    if: ${{ needs.changes.outputs.corekube_db == 'true' }}
    name: Build and push CoreKube DB
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Set up Docker Buildx # needed for layer cache exporter
        uses: docker/setup-buildx-action@v3

      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (sha-based tags and labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/yutotakano/corekube-db
          tags: |
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./corekube-db
          file: ./corekube-db/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # =========================================================
  # CoreKube Frontend
  # =========================================================
  build_corekube_frontend:
    needs: changes
    if: ${{ needs.changes.outputs.corekube_frontend == 'true' }}
    name: Build and push CoreKube Frontend
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Set up Docker Buildx # needed for layer cache exporter
        uses: docker/setup-buildx-action@v3

      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (sha-based tags and labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/yutotakano/corekube-frontend
          tags: |
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./corekube-frontend
          file: ./corekube-frontend/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # =========================================================
  # CoreKube Worker
  # =========================================================
  build_corekube_worker:
    needs: changes
    if: ${{ needs.changes.outputs.corekube_worker == 'true' || needs.changes.outputs.libck == 'true' }}
    name: Build and push CoreKube Worker
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Set up Docker Buildx # needed for layer cache exporter
        uses: docker/setup-buildx-action@v3

      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (sha-based tags and labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/yutotakano/corekube5g-worker
          tags: |
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./corekube5g-worker/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # =========================================================
  # Core Metrics Bus
  # =========================================================
  build_core_metrics_bus:
    needs: changes
    if: ${{ needs.changes.outputs.core_metrics_bus == 'true' }}
    name: Build and push Core Metrics Bus
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Set up Docker Buildx # needed for layer cache exporter
        uses: docker/setup-buildx-action@v3

      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (sha-based tags and labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/yutotakano/core_metrics_bus
          tags: |
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./core-metrics-bus
          file: ./core-metrics-bus/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # =========================================================
  # Nervion RAN emulator controller
  # =========================================================
  build_ran_controller:
    needs: changes
    if: ${{ needs.changes.outputs.ran_controller == 'true' }}
    name: Build and push Nervion controller
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Set up Docker Buildx # needed for layer cache exporter
        uses: docker/setup-buildx-action@v3

      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (sha-based tags and labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/yutotakano/ran_controller
          tags: |
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./ran_emulator/kubernetes/docker_controller/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # =========================================================
  # Nervion RAN emulator slave
  # =========================================================
  build_ran_slave:
    needs: changes
    if: ${{ needs.changes.outputs.ran_slave == 'true' }}
    name: Build and push Nervion slave
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Set up Docker Buildx # needed for layer cache exporter
        uses: docker/setup-buildx-action@v3

      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (sha-based tags and labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/yutotakano/ran_slave
          tags: |
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./ran_emulator/kubernetes/docker_slave/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
